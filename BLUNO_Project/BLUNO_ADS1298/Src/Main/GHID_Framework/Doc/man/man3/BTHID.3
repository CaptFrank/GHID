.TH "BTHID" 3 "Sun Mar 30 2014" "Version version 2.0" "GHID Framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BTHID \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <BTHID\&.h>\fP
.PP
Inherits \fBBluetoothService\fP\&.
.PP
Inherited by \fBPS4BT\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBTHID\fP (\fBBTD\fP *p, bool \fBpair\fP=false, const char *pin='0000')"
.br
.ti -1c
.RI "\fBHIDReportParser\fP * \fBGetReportParser\fP (uint8_t id)"
.br
.ti -1c
.RI "bool \fBSetReportParser\fP (uint8_t id, \fBHIDReportParser\fP *prs)"
.br
.ti -1c
.RI "void \fBsetProtocolMode\fP (uint8_t mode)"
.br
.ti -1c
.RI "void \fBsetLeds\fP (uint8_t \fBdata\fP)"
.br
.ti -1c
.RI "void \fBpair\fP (void)"
.br
.ti -1c
.RI "void \fBattachOnInit\fP (void(*funcOnInit)(void))"
.br
.in -1c
.PP
.RI "\fBBluetoothService implementation\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "virtual void \fBACLData\fP (uint8_t *\fBACLData\fP)"
.br
.ti -1c
.RI "virtual void \fBRun\fP ()"
.br
.ti -1c
.RI "virtual void \fBReset\fP ()"
.br
.ti -1c
.RI "virtual void \fBdisconnect\fP ()"
.br
.in -1c
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBconnected\fP"
.br
.in -1c
.SS "Protected Member Functions"

.PP
.RI "\fBOverridable functions\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "virtual void \fBParseBTHIDData\fP (uint8_t len, uint8_t *buf)"
.br
.ti -1c
.RI "virtual void \fBOnInitBTHID\fP ()"
.br
.ti -1c
.RI "virtual void \fBResetBTHID\fP ()"
.br
.in -1c
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBBTD\fP * \fBpBtd\fP"
.br
.ti -1c
.RI "uint16_t \fBhci_handle\fP"
.br
.ti -1c
.RI "uint8_t \fBcontrol_scid\fP [2]"
.br
.ti -1c
.RI "uint8_t \fBinterrupt_scid\fP [2]"
.br
.in -1c
.SH "Detailed Description"
.PP 
This \fBBluetoothService\fP class implements support for Bluetooth \fBHID\fP devices\&. 
.PP
Definition at line 29 of file BTHID\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBBTHID::BTHID\fP (\fBBTD\fP *p, boolpair = \fCfalse\fP, const char *pin = \fC'0000'\fP)"Constructor for the \fBBTHID\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP Pointer to the \fBBTD\fP class instance\&. 
.br
\fIpair\fP Set this to true in order to pair with the device\&. If the argument is omitted then it will not pair with it\&. One can use \fBPAIR\fP to set it to true\&. 
.br
\fIpin\fP Write the pin to \fBBTD::btdPin\fP\&. If argument is omitted, then '0000' will be used\&. 
.RE
.PP

.PP
Definition at line 23 of file BTHID\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void \fBBTHID::ACLData\fP (uint8_t *ACLData)\fC [virtual]\fP"Used to pass acldata to the services\&. 
.PP
\fBParameters:\fP
.RS 4
\fIACLData\fP Incoming acldata\&. 
.RE
.PP

.PP
Reimplemented from \fBBluetoothService\fP\&.
.PP
Definition at line 59 of file BTHID\&.cpp\&.
.SS "void \fBBTHID::attachOnInit\fP (void(*)(void)funcOnInit)\fC [inline]\fP"Used to call your own function when the device is successfully initialized\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfuncOnInit\fP Function to call\&. 
.RE
.PP

.PP
Reimplemented in \fBPS4BT\fP\&.
.PP
Definition at line 104 of file BTHID\&.h\&.
.SS "void \fBBTHID::disconnect\fP ()\fC [virtual]\fP"Used this to disconnect the devices\&. 
.PP
Reimplemented from \fBBluetoothService\fP\&.
.PP
Definition at line 52 of file BTHID\&.cpp\&.
.SS "\fBHIDReportParser\fP* \fBBTHID::GetReportParser\fP (uint8_tid)\fC [inline]\fP"Get \fBHIDReportParser\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP ID of parser\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns the corresponding \fBHIDReportParser\fP\&. Returns NULL if id is not valid\&. 
.RE
.PP

.PP
Definition at line 58 of file BTHID\&.h\&.
.SS "virtual void \fBBTHID::OnInitBTHID\fP ()\fC [inline, protected, virtual]\fP"Called when a device is connected 
.PP
Reimplemented in \fBPS4BT\fP\&.
.PP
Definition at line 119 of file BTHID\&.h\&.
.SS "void \fBBTHID::pair\fP (void)\fC [inline]\fP"Call this to start the paring sequence with a device 
.PP
Definition at line 95 of file BTHID\&.h\&.
.SS "virtual void \fBBTHID::ParseBTHIDData\fP (uint8_tlen, uint8_t *buf)\fC [inline, protected, virtual]\fP"Used to parse Bluetooth \fBHID\fP data to any class that inherits this class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlen\fP The length of the incoming data\&. 
.br
\fIbuf\fP Pointer to the data buffer\&. 
.RE
.PP

.PP
Reimplemented in \fBPS4BT\fP\&.
.PP
Definition at line 115 of file BTHID\&.h\&.
.SS "void \fBBTHID::Reset\fP ()\fC [virtual]\fP"Use this to reset the service\&. 
.PP
Reimplemented from \fBBluetoothService\fP\&.
.PP
Definition at line 44 of file BTHID\&.cpp\&.
.SS "virtual void \fBBTHID::ResetBTHID\fP ()\fC [inline, protected, virtual]\fP"Used to reset any buffers in the class that inherits this 
.PP
Reimplemented in \fBPS4BT\fP\&.
.PP
Definition at line 123 of file BTHID\&.h\&.
.SS "void \fBBTHID::Run\fP ()\fC [virtual]\fP"Used to run part of the state machine\&. 
.PP
Reimplemented from \fBBluetoothService\fP\&.
.PP
Definition at line 347 of file BTHID\&.cpp\&.
.SS "void \fBBTHID::setLeds\fP (uint8_tdata)"Used to set the leds on a keyboard\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP See \fBKBDLEDS\fP in \fBhidboot\&.h\fP 
.RE
.PP

.PP
Definition at line 396 of file BTHID\&.cpp\&.
.SS "void \fBBTHID::setProtocolMode\fP (uint8_tmode)\fC [inline]\fP"Set \fBHID\fP protocol mode\&. 
.PP
\fBParameters:\fP
.RS 4
\fImode\fP \fBHID\fP protocol to use\&. Either HID_BOOT_PROTOCOL or HID_RPT_PROTOCOL\&. 
.RE
.PP

.PP
Definition at line 81 of file BTHID\&.h\&.
.SS "bool \fBBTHID::SetReportParser\fP (uint8_tid, \fBHIDReportParser\fP *prs)\fC [inline]\fP"Set \fBHIDReportParser\fP to be used\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP Id of parser\&. 
.br
\fIprs\fP Pointer to \fBHIDReportParser\fP\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns true if the \fBHIDReportParser\fP is set\&. False otherwise\&. 
.RE
.PP

.PP
Definition at line 70 of file BTHID\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "bool \fBBTHID::connected\fP"True if a device is connected 
.PP
Definition at line 92 of file BTHID\&.h\&.
.SS "uint8_t \fBBTHID::control_scid\fP[2]\fC [protected]\fP"L2CAP source CID for HID_Control 
.PP
Definition at line 136 of file BTHID\&.h\&.
.SS "uint16_t \fBBTHID::hci_handle\fP\fC [protected]\fP"HCI Handle for connection 
.PP
Definition at line 132 of file BTHID\&.h\&.
.SS "uint8_t \fBBTHID::interrupt_scid\fP[2]\fC [protected]\fP"L2CAP source CID for HID_Interrupt 
.PP
Definition at line 139 of file BTHID\&.h\&.
.SS "\fBBTD\fP* \fBBTHID::pBtd\fP\fC [protected]\fP"Pointer to \fBBTD\fP instance 
.PP
Definition at line 129 of file BTHID\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for GHID Framework from the source code\&.
