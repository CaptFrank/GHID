.TH "ACM" 3 "Sun Mar 30 2014" "Version version 2.0" "GHID Framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ACM \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <cdcacm\&.h>\fP
.PP
Inherited by \fBPL2303\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBACM\fP (USB *pusb, \fBCDCAsyncOper\fP *pasync)"
.br
.ti -1c
.RI "uint8_t \fBSetCommFeature\fP (uint16_t fid, uint8_t nbytes, uint8_t *dataptr)"
.br
.ti -1c
.RI "uint8_t \fBGetCommFeature\fP (uint16_t fid, uint8_t nbytes, uint8_t *dataptr)"
.br
.ti -1c
.RI "uint8_t \fBClearCommFeature\fP (uint16_t fid)"
.br
.ti -1c
.RI "uint8_t \fBSetLineCoding\fP (const \fBLINE_CODING\fP *dataptr)"
.br
.ti -1c
.RI "uint8_t \fBGetLineCoding\fP (\fBLINE_CODING\fP *dataptr)"
.br
.ti -1c
.RI "uint8_t \fBSetControlLineState\fP (uint8_t state)"
.br
.ti -1c
.RI "uint8_t \fBSendBreak\fP (uint16_t duration)"
.br
.ti -1c
.RI "uint8_t \fBGetNotif\fP (uint16_t *bytes_rcvd, uint8_t *dataptr)"
.br
.ti -1c
.RI "uint8_t \fBRcvData\fP (uint16_t *nbytesptr, uint8_t *dataptr)"
.br
.ti -1c
.RI "uint8_t \fBSndData\fP (uint16_t nbytes, uint8_t *dataptr)"
.br
.ti -1c
.RI "virtual uint8_t \fBInit\fP (uint8_t parent, uint8_t port, bool lowspeed)"
.br
.ti -1c
.RI "virtual uint8_t \fBRelease\fP ()"
.br
.ti -1c
.RI "virtual uint8_t \fBPoll\fP ()"
.br
.ti -1c
.RI "virtual uint8_t \fBGetAddress\fP ()"
.br
.ti -1c
.RI "virtual bool \fBisReady\fP ()"
.br
.ti -1c
.RI "virtual void \fBEndpointXtract\fP (uint8_t conf, uint8_t iface, uint8_t alt, uint8_t proto, const USB_ENDPOINT_DESCRIPTOR *ep)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBPrintEndpointDescriptor\fP (const USB_ENDPOINT_DESCRIPTOR *ep_ptr)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "USB * \fBpUsb\fP"
.br
.ti -1c
.RI "\fBCDCAsyncOper\fP * \fBpAsync\fP"
.br
.ti -1c
.RI "uint8_t \fBbAddress\fP"
.br
.ti -1c
.RI "uint8_t \fBbConfNum\fP"
.br
.ti -1c
.RI "uint8_t \fBbControlIface\fP"
.br
.ti -1c
.RI "uint8_t \fBbDataIface\fP"
.br
.ti -1c
.RI "uint8_t \fBbNumEP\fP"
.br
.ti -1c
.RI "uint32_t \fBqNextPollTime\fP"
.br
.ti -1c
.RI "bool \fBbPollEnable\fP"
.br
.ti -1c
.RI "bool \fBready\fP"
.br
.ti -1c
.RI "EpInfo \fBepInfo\fP [\fBACM_MAX_ENDPOINTS\fP]"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static const uint8_t \fBepDataInIndex\fP = 1"
.br
.ti -1c
.RI "static const uint8_t \fBepDataOutIndex\fP = 2"
.br
.ti -1c
.RI "static const uint8_t \fBepInterruptInIndex\fP = 3"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 138 of file cdcacm\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBACM::ACM\fP (USB *pusb, \fBCDCAsyncOper\fP *pasync)"
.PP
Definition at line 23 of file cdcacm\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "uint8_t \fBACM::ClearCommFeature\fP (uint16_tfid)"
.PP
Definition at line 316 of file cdcacm\&.cpp\&.
.SS "void \fBACM::EndpointXtract\fP (uint8_tconf, uint8_tiface, uint8_talt, uint8_tproto, const USB_ENDPOINT_DESCRIPTOR *ep)\fC [virtual]\fP"
.PP
Definition at line 224 of file cdcacm\&.cpp\&.
.SS "virtual uint8_t \fBACM::GetAddress\fP ()\fC [inline, virtual]\fP"
.PP
Definition at line 180 of file cdcacm\&.h\&.
.SS "uint8_t \fBACM::GetCommFeature\fP (uint16_tfid, uint8_tnbytes, uint8_t *dataptr)"
.PP
Definition at line 312 of file cdcacm\&.cpp\&.
.SS "uint8_t \fBACM::GetLineCoding\fP (\fBLINE_CODING\fP *dataptr)"
.PP
Definition at line 324 of file cdcacm\&.cpp\&.
.SS "uint8_t \fBACM::GetNotif\fP (uint16_t *bytes_rcvd, uint8_t *dataptr)"
.SS "uint8_t \fBACM::Init\fP (uint8_tparent, uint8_tport, boollowspeed)\fC [virtual]\fP"
.PP
Reimplemented in \fBPL2303\fP\&.
.PP
Definition at line 47 of file cdcacm\&.cpp\&.
.SS "virtual bool \fBACM::isReady\fP ()\fC [inline, virtual]\fP"
.PP
Definition at line 184 of file cdcacm\&.h\&.
.SS "uint8_t \fBACM::Poll\fP ()\fC [virtual]\fP"
.PP
Definition at line 264 of file cdcacm\&.cpp\&.
.SS "void \fBACM::PrintEndpointDescriptor\fP (const USB_ENDPOINT_DESCRIPTOR *ep_ptr)\fC [protected]\fP"
.PP
Definition at line 336 of file cdcacm\&.cpp\&.
.SS "uint8_t \fBACM::RcvData\fP (uint16_t *nbytesptr, uint8_t *dataptr)"
.PP
Definition at line 300 of file cdcacm\&.cpp\&.
.SS "uint8_t \fBACM::Release\fP ()\fC [virtual]\fP"
.PP
Definition at line 251 of file cdcacm\&.cpp\&.
.SS "uint8_t \fBACM::SendBreak\fP (uint16_tduration)"
.PP
Definition at line 332 of file cdcacm\&.cpp\&.
.SS "uint8_t \fBACM::SetCommFeature\fP (uint16_tfid, uint8_tnbytes, uint8_t *dataptr)"
.PP
Definition at line 308 of file cdcacm\&.cpp\&.
.SS "uint8_t \fBACM::SetControlLineState\fP (uint8_tstate)"
.PP
Definition at line 328 of file cdcacm\&.cpp\&.
.SS "uint8_t \fBACM::SetLineCoding\fP (const \fBLINE_CODING\fP *dataptr)"
.PP
Definition at line 320 of file cdcacm\&.cpp\&.
.SS "uint8_t \fBACM::SndData\fP (uint16_tnbytes, uint8_t *dataptr)"
.PP
Definition at line 304 of file cdcacm\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "uint8_t \fBACM::bAddress\fP\fC [protected]\fP"
.PP
Definition at line 146 of file cdcacm\&.h\&.
.SS "uint8_t \fBACM::bConfNum\fP\fC [protected]\fP"
.PP
Definition at line 147 of file cdcacm\&.h\&.
.SS "uint8_t \fBACM::bControlIface\fP\fC [protected]\fP"
.PP
Definition at line 148 of file cdcacm\&.h\&.
.SS "uint8_t \fBACM::bDataIface\fP\fC [protected]\fP"
.PP
Definition at line 149 of file cdcacm\&.h\&.
.SS "uint8_t \fBACM::bNumEP\fP\fC [protected]\fP"
.PP
Definition at line 150 of file cdcacm\&.h\&.
.SS "bool \fBACM::bPollEnable\fP\fC [protected]\fP"
.PP
Definition at line 152 of file cdcacm\&.h\&.
.SS "const uint8_t \fBACM::epDataInIndex\fP = 1\fC [static, protected]\fP"
.PP
Definition at line 140 of file cdcacm\&.h\&.
.SS "const uint8_t \fBACM::epDataOutIndex\fP = 2\fC [static, protected]\fP"
.PP
Definition at line 141 of file cdcacm\&.h\&.
.SS "EpInfo \fBACM::epInfo\fP[\fBACM_MAX_ENDPOINTS\fP]\fC [protected]\fP"
.PP
Definition at line 155 of file cdcacm\&.h\&.
.SS "const uint8_t \fBACM::epInterruptInIndex\fP = 3\fC [static, protected]\fP"
.PP
Definition at line 142 of file cdcacm\&.h\&.
.SS "\fBCDCAsyncOper\fP* \fBACM::pAsync\fP\fC [protected]\fP"
.PP
Definition at line 145 of file cdcacm\&.h\&.
.SS "USB* \fBACM::pUsb\fP\fC [protected]\fP"
.PP
Definition at line 144 of file cdcacm\&.h\&.
.SS "uint32_t \fBACM::qNextPollTime\fP\fC [protected]\fP"
.PP
Definition at line 151 of file cdcacm\&.h\&.
.SS "bool \fBACM::ready\fP\fC [protected]\fP"
.PP
Definition at line 153 of file cdcacm\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for GHID Framework from the source code\&.
